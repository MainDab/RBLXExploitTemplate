using System;
using System.ComponentModel;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Windows.Forms;
using EasyExploits;
using Microsoft.Win32;

namespace whateverexploitnamehere
{
	// Token: 0x02000002 RID: 2
	public partial class Form1 : Form
	{
		// Token: 0x06000001 RID: 1 RVA: 0x00002050 File Offset: 0x00000250
		public Form1()
		{
			this.InitializeComponent();
			new WebClient().Proxy = null;
			try
			{
				RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Internet Explorer\\Main\\FeatureControl\\FEATURE_BROWSER_EMULATION", true);
				string friendlyName = AppDomain.CurrentDomain.FriendlyName;
				bool flag = registryKey.GetValue(friendlyName) == null;
				bool flag2 = flag;
				if (flag2)
				{
					registryKey.SetValue(friendlyName, 11001, RegistryValueKind.DWord);
				}
			}
			catch (Exception)
			{
			}
			this.webBrowser1.Url = new Uri(string.Format("file:///{0}/Monaco/Monaco.html", Directory.GetCurrentDirectory()));
			HtmlDocument document = this.webBrowser1.Document;
			string scriptName = "SetTheme";
			object[] args = new string[]
			{
				"Dark"
			};
			document.InvokeScript(scriptName, args);
			this.addBase();
			this.addMath();
			this.addGlobalNS();
			this.addGlobalV();
			this.addGlobalF();
			this.webBrowser1.Document.InvokeScript("SetText", new object[]
			{
				"-- Text here"
			});
		}

		// Token: 0x06000002 RID: 2 RVA: 0x00002190 File Offset: 0x00000390
		private void button1_Click(object sender, EventArgs e)
		{
			HtmlDocument document = this.webBrowser1.Document;
			string scriptName = "GetText";
			object[] array = new string[0];
			object[] args = array;
			object obj = document.InvokeScript(scriptName, args);
			string script = obj.ToString();
			this.easyexploits.ExecuteScript(script);
		}

		// Token: 0x06000003 RID: 3 RVA: 0x000021DA File Offset: 0x000003DA
		private void button3_Click(object sender, EventArgs e)
		{
			this.webBrowser1.Document.InvokeScript("SetText", new object[]
			{
				""
			});
		}

		// Token: 0x06000004 RID: 4 RVA: 0x00002204 File Offset: 0x00000404
		private void button4_Click(object sender, EventArgs e)
		{
			bool flag = Functions.openfiledialog.ShowDialog() == DialogResult.OK;
			if (flag)
			{
				try
				{
					string text = File.ReadAllText(Functions.openfiledialog.FileName);
					this.webBrowser1.Document.InvokeScript("SetText", new object[]
					{
						text
					});
				}
				catch (Exception ex)
				{
					MessageBox.Show("Error: Could not read file from disk. Original error: " + ex.Message);
					Console.WriteLine("File can't be opened");
				}
			}
		}

		// Token: 0x06000005 RID: 5 RVA: 0x00002290 File Offset: 0x00000490
		private void Form1_Load(object sender, EventArgs e)
		{
			Functions.ListBox(this.listBox1, "./scripts", "*.txt");
			Functions.ListBox(this.listBox1, "./scripts", "*.lua");
		}

		// Token: 0x06000006 RID: 6 RVA: 0x00002294 File Offset: 0x00000494
		private void addIntel(string label, string kind, string detail, string insertText)
		{
			string text = "\"" + label + "\"";
			string text2 = "\"" + kind + "\"";
			string text3 = "\"" + detail + "\"";
			string text4 = "\"" + insertText + "\"";
			this.webBrowser1.Document.InvokeScript("AddIntellisense", new object[]
			{
				label,
				kind,
				detail,
				insertText
			});
		}

		// Token: 0x06000007 RID: 7 RVA: 0x00002314 File Offset: 0x00000514
		private void addGlobalF()
		{
			string[] array = File.ReadAllLines(this.defPath + "//globalf.txt");
			foreach (string text in array)
			{
				bool flag = text.Contains(':');
				bool flag2 = flag;
				if (flag2)
				{
					this.addIntel(text, "Function", text, text.Substring(1));
				}
				else
				{
					this.addIntel(text, "Function", text, text);
				}
			}
		}

		// Token: 0x06000008 RID: 8 RVA: 0x0000238C File Offset: 0x0000058C
		private void addGlobalV()
		{
			foreach (string text in File.ReadLines(this.defPath + "//globalv.txt"))
			{
				this.addIntel(text, "Variable", text, text);
			}
		}

		// Token: 0x06000009 RID: 9 RVA: 0x000023F8 File Offset: 0x000005F8
		private void addGlobalNS()
		{
			foreach (string text in File.ReadLines(this.defPath + "//globalns.txt"))
			{
				this.addIntel(text, "Class", text, text);
			}
		}

		// Token: 0x0600000A RID: 10 RVA: 0x00002464 File Offset: 0x00000664
		private void addMath()
		{
			foreach (string text in File.ReadLines(this.defPath + "//classfunc.txt"))
			{
				this.addIntel(text, "Method", text, text);
			}
		}

		// Token: 0x0600000B RID: 11 RVA: 0x000024D0 File Offset: 0x000006D0
		private void addBase()
		{
			foreach (string text in File.ReadLines(this.defPath + "//base.txt"))
			{
				this.addIntel(text, "Keyword", text, text);
			}
		}

		// Token: 0x04000001 RID: 1
		private Module easyexploits = new Module();

		// Token: 0x04000002 RID: 2
		private string defPath = Application.StartupPath + "//Monaco//";

		private void listBox1_SelectedIndexChanged(object sender, EventArgs e)
		{
			webBrowser1.Document.InvokeScript("SetText", new object[]
			{
				""
			});
			string gay = File.ReadAllText("Scripts\\" + this.listBox1.SelectedItem.ToString());
			bool flag = this.listBox1.SelectedItem != null;
			if (flag)
			{
				webBrowser1.Document.InvokeScript("SetText", new object[]
				{
					(gay)
				});
			}
		}
	}
}
